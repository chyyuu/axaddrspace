var searchIndex = new Map(JSON.parse('[["axaddrspace",{"t":"FPKGTTFIFIIIPFFFTTTTONNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNCNNNNNOONNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMOOOGRPKKPFFPFFPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNN","n":["AddrSpace","Alloc","AxMmHal","Backend","DEVICE","EXECUTE","GuestPhysAddr","GuestPhysAddrRange","GuestVirtAddr","GuestVirtAddrRange","HostPhysAddr","HostVirtAddr","Linear","MappingFlags","NestedPageFaultInfo","PhysFrame","READ","UNCACHED","USER","WRITE","access_flags","add","","add_assign","","all","alloc","alloc_frame","alloc_zero","as_mut_ptr","as_usize","","base","bitand","bitand_assign","bitor","bitor_assign","bits","","bitxor","bitxor_assign","borrow","","","","","","","borrow_mut","","","","","","","clear","clone","","","","clone_into","","","","clone_to_uninit","","","","cmp","","complement","contains","contains_range","dealloc_frame","default","","device","difference","drop","","empty","end","","","eq","","","extend","fault_guest_paddr","fill","fmt","","","","","","","","","","","","","","from","","","","","","","","","","from_bits","from_bits_retain","","from_bits_truncate","from_iter","from_name","from_usize","","handle_page_fault","insert","intersection","intersects","into","","","","","","","into_iter","is_all","is_empty","iter","iter_names","map","map_alloc","map_linear","new_alloc","new_empty","new_linear","not","page_table","page_table_root","partial_cmp","","phys_to_virt","protect","remove","set","size","start","","start_paddr","sub","","","","","sub_assign","","","symmetric_difference","to_owned","","","","toggle","translate","translate_and_get_limit","translated_byte_buffer","try_from","","","","","","","try_into","","","","","","","type_id","","","","","","","uninit","union","unmap","","virt_to_phys","_phantom","pa_va_offset","populate","AccessWidth","Addr","Byte","DeviceAddr","DeviceAddrRange","Dword","Port","PortRange","Qword","SysRegAddr","SysRegAddrRange","Word","addr","bits_range","borrow","","","","","borrow_mut","","","","","clone","","","","","clone_into","","","","","clone_to_uninit","","","","","cmp","","","contains","","","end","","eq","","","","","fmt","","","","","","","","","","","from","","","","","into","","","","","new","","","","number","partial_cmp","","","size","start","","to_owned","","","","","try_from","","","","","","try_into","","","","","type_id","","","",""],"q":[[0,"axaddrspace"],[200,"axaddrspace::Backend"],[203,"axaddrspace::device"],[308,"page_table_entry"],[309,"axaddrspace::addr"],[310,"axaddrspace::frame"],[311,"axerrno"],[312,"axaddrspace::hal"],[313,"core::option"],[314,"axaddrspace::address_space"],[315,"page_table_multiarch"],[316,"axaddrspace::address_space::backend"],[317,"core::cmp"],[318,"core::iter::traits::collect"],[319,"core::fmt"],[320,"core::result"],[321,"x86_64::structures::paging::page_table"],[322,"bitflags::iter"],[323,"page_table_multiarch::bits64"],[324,"memory_addr::addr"],[325,"alloc::vec"],[326,"core::any"],[327,"core::marker"],[328,"core::ops::range"],[329,"axaddrspace::device::device_addr"]],"i":"`Bb``d0``````1```0000bfj103AbAf1132An6666666667043256704325067436743674343660143`60260BhBj86587488888266655547889266554788888865288889265478888892292982265398821048665586588965822289265478926547892654748923E`Ed1`FdEh``0``0``0Ef1ElEn3F`321403214032140321403403521212140322114000333214032140321030403421214032144032140321403","f":"````````````````````{bd}{{fh}f}{{jh}j}{{{n{lf}}h}A`}{{{n{lj}}h}A`}{{}d}{{}{{Ad{{Ab{c}}}}}Af}{{}{{Aj{Ah}}}}1{{{n{{Ab{c}}}}}AlAf}{fh}{jh}{{{n{{An{c}}}}}jB`}{{dd}d}{{{n{ld}}d}A`}10{{{n{d}}}h}021{n{{n{c}}}{}}000000{{{n{l}}}{{n{lc}}}{}}000000{{{n{l{An{c}}}}}A`B`}{{{n{d}}}d}{{{n{{Bb{c}}}}}{{Bb{c}}}B`}{{{n{f}}}f}{{{n{j}}}j}{{n{n{lc}}}A`{}}000{{nAl}A`}000{{{n{f}}{n{f}}}Bd}{{{n{j}}{n{j}}}Bd}{dd}{{{n{d}}d}Bf}{{{n{{An{c}}}}jh}BfB`}{AhA`}{{}f}{{}j}`{{dd}d}?{{{n{l{Ab{c}}}}}A`Af}{{}d}{{{n{{An{c}}}}}jB`}{Bhf}{Bjj}{{{n{d}}{n{d}}}Bf}{{{n{f}}{n{f}}}Bf}{{{n{j}}{n{j}}}Bf}{{{n{ld}}c}A`{{Bn{}{{Bl{d}}}}}}{bj}{{{n{l{Ab{c}}}}Al}A`Af}{{{n{d}}{n{lC`}}}{{Cd{A`Cb}}}}0000{{{n{{An{c}}}}{n{lC`}}}CfB`}{{{n{f}}{n{lC`}}}Cf}00{{{n{j}}{n{lC`}}}Cf}00{{{n{{Ab{c}}}}{n{lC`}}}Cf{ChAf}}{{{n{b}}{n{lC`}}}Cf}{Cjd}{cc{}}000{hf}{hj}222{h{{Aj{d}}}}{hd}00{cd{{Bn{}{{Bl{d}}}}}}{{{n{Cl}}}{{Aj{d}}}}54{{{n{l{An{c}}}}jd}BfB`}{{{n{ld}}d}A`}{{dd}d}{{{n{d}}d}Bf}{{}c{}}000000{d}{{{n{d}}}Bf}0{{{n{d}}}{{Cn{d}}}}{{{n{d}}}{{D`{d}}}}{{{n{{Bb{c}}}}jhd{n{l{Db{``c}}}}}BfB`}{{{n{l{An{c}}}}jhdBf}AdB`}{{{n{l{An{c}}}}jDdhd}AdB`}{Bf{{Bb{c}}}B`}{{jh}{{Ad{{An{c}}}}}B`}{h{{Bb{c}}}B`}{dd}{{{n{{An{c}}}}}{{n{{Db{``c}}}}}B`}{{{n{{An{c}}}}}DdB`}{{{n{f}}{n{f}}}{{Aj{Bd}}}}{{{n{j}}{n{j}}}{{Aj{Bd}}}}{AhDf};{{{n{ld}}d}A`}{{{n{ld}}dBf}A`}{{{n{{An{c}}}}}hB`}{Bhf}{Bjj}{{{n{{Ab{c}}}}}AhAf}{{dd}d}{{fh}f}{{ff}h}{{jh}j}{{jj}h}:{{{n{lf}}h}A`}{{{n{lj}}h}A`}6{nc{}}000={{{n{{An{c}}}}j}{{Aj{Dd}}}B`}{{{n{{An{c}}}}j}{{Aj{{Dh{Ddh}}}}}B`}{{{n{{An{c}}}}jh}{{Aj{{Dl{{n{l{Dj{Al}}}}}}}}}B`}{c{{Cd{e}}}{}{}}000000{{}{{Cd{c}}}{}}000000{nDn}000000{{}{{Ab{c}}}Af}>{{{n{{Bb{c}}}}jh{n{l{Db{``c}}}}}BfB`}{{{n{l{An{c}}}}jh}AdB`}{DfAh}{E`Eb}{Edh}{E`Bf}````````````{{{n{Ef}}}h}{{{n{Eh}}}{{Ej{h}}}}{n{{n{c}}}{}}0000{{{n{l}}}{{n{lc}}}{}}0000{{{n{El}}}El}{{{n{En}}}En}{{{n{Eh}}}Eh}{{{n{F`}}}F`}{{{n{Ef}}}Ef}{{n{n{lc}}}A`{}}0000{{nAl}A`}0000{{{n{Eh}}{n{Eh}}}Bd}{{{n{F`}}{n{F`}}}Bd}{{{n{Ef}}{n{Ef}}}Bd}{{{n{{Fd{}{{Fb{c}}}}}}c}BfFf}{{{n{El}}c}Bf{}}{{{n{En}}c}Bf{}}{ElEf}{EnF`}{{{n{El}}{n{El}}}Bf}{{{n{En}}{n{En}}}Bf}{{{n{Eh}}{n{Eh}}}Bf}{{{n{F`}}{n{F`}}}Bf}{{{n{Ef}}{n{Ef}}}Bf}{{{n{El}}{n{lC`}}}Cf}0{{{n{En}}{n{lC`}}}Cf}0{{{n{Eh}}{n{lC`}}}Cf}{{{n{F`}}{n{lC`}}}Cf}00{{{n{Ef}}{n{lC`}}}Cf}00{cc{}}0000{{}c{}}0000{{EfEf}El}{{F`F`}En}{FhF`}{hEf}{{{n{F`}}}Fh}{{{n{Eh}}{n{Eh}}}{{Aj{Bd}}}}{{{n{F`}}{n{F`}}}{{Aj{Bd}}}}{{{n{Ef}}{n{Ef}}}{{Aj{Bd}}}}{{{n{Eh}}}h}{ElEf}{EnF`}{nc{}}0000{c{{Cd{e}}}{}{}}0{h{{Cd{Ehc}}}{}}111{{}{{Cd{c}}}{}}0000{nDn}0000","D":"AB`","p":[[5,"NestedPageFaultInfo",0],[5,"MappingFlags",0,308],[5,"GuestVirtAddr",0,309],[1,"usize"],[5,"GuestPhysAddr",0,309],[0,"mut"],[1,"reference",null,null,1],[1,"unit"],[5,"PhysFrame",0,310],[8,"AxResult",311],[10,"AxMmHal",0,312],[8,"HostPhysAddr",0,309],[6,"Option",313,null,1],[1,"u8"],[5,"AddrSpace",0,314],[10,"PagingHandler",315],[6,"Backend",0,316],[6,"Ordering",317],[1,"bool"],[8,"GuestVirtAddrRange",0,309],[8,"GuestPhysAddrRange",0,309],[17,"Item"],[10,"IntoIterator",318],[5,"Formatter",319],[5,"Error",319],[6,"Result",320,null,1],[8,"Result",319],[10,"Debug",319],[5,"PageTableFlags",321],[1,"str"],[5,"Iter",322],[5,"IterNames",322],[5,"PageTable64",323],[5,"PhysAddr",324],[8,"HostVirtAddr",0,309],[1,"tuple",null,null,1],[1,"slice"],[5,"Vec",325],[5,"TypeId",326],[15,"Alloc",200],[5,"PhantomData",327],[15,"Linear",200],[5,"SysRegAddr",203],[6,"AccessWidth",203],[5,"Range",328],[5,"SysRegAddrRange",203,329],[5,"PortRange",203,329],[5,"Port",203],[17,"Addr"],[10,"DeviceAddrRange",203,329],[10,"DeviceAddr",203,329],[1,"u16"]],"r":[[0,314],[1,316],[2,312],[3,316],[4,308],[5,308],[6,309],[7,309],[8,309],[9,309],[10,309],[11,309],[12,316],[13,308],[15,310],[16,308],[17,308],[18,308],[19,308],[21,309],[22,309],[23,309],[24,309],[25,308],[26,310],[27,312],[28,310],[29,310],[30,309],[31,309],[32,314],[33,308],[34,308],[35,308],[36,308],[37,308],[38,308],[39,308],[40,308],[41,308],[42,316],[43,314],[44,309],[45,309],[46,310],[48,308],[49,316],[50,314],[51,309],[52,309],[53,310],[55,314],[56,308],[57,316],[58,309],[59,309],[60,308],[61,316],[62,309],[63,309],[64,308],[65,316],[66,309],[67,309],[68,309],[69,309],[70,308],[71,308],[72,314],[73,312],[74,309],[75,309],[77,308],[78,314],[79,310],[80,308],[81,314],[82,309],[83,309],[84,308],[85,309],[86,309],[87,308],[89,310],[90,308],[91,308],[92,308],[93,308],[94,308],[95,314],[96,309],[97,309],[98,309],[99,309],[100,309],[101,309],[102,310],[104,308],[105,308],[106,316],[107,314],[108,309],[109,309],[110,309],[111,309],[112,310],[114,308],[115,308],[116,308],[117,308],[118,308],[119,308],[120,309],[121,309],[122,314],[123,308],[124,308],[125,308],[126,308],[127,316],[128,314],[129,309],[130,309],[131,310],[133,308],[134,308],[135,308],[136,308],[137,308],[138,316],[139,314],[140,314],[141,316],[142,314],[143,316],[144,308],[145,314],[146,314],[147,309],[148,309],[149,312],[150,316],[151,308],[152,308],[153,314],[154,309],[155,309],[156,310],[157,308],[158,309],[159,309],[160,309],[161,309],[162,308],[163,309],[164,309],[165,308],[166,308],[167,316],[168,309],[169,309],[170,308],[171,314],[172,314],[173,314],[174,308],[175,316],[176,314],[177,309],[178,309],[179,310],[181,308],[182,316],[183,314],[184,309],[185,309],[186,310],[188,308],[189,316],[190,314],[191,309],[192,309],[193,310],[195,310],[196,308],[197,316],[198,314],[199,312],[204,329],[206,329],[207,329],[210,329],[213,329],[217,329],[218,329],[222,329],[223,329],[227,329],[228,329],[232,329],[233,329],[237,329],[238,329],[245,329],[246,329],[247,329],[248,329],[249,329],[250,329],[251,329],[255,329],[256,329],[257,329],[258,329],[266,329],[267,329],[271,329],[272,329],[276,329],[277,329],[285,329],[286,329],[287,329],[288,329],[292,329],[293,329],[298,329],[299,329],[303,329],[304,329]],"b":[[37,"impl-Flags-for-MappingFlags"],[38,"impl-MappingFlags"],[90,"impl-Binary-for-MappingFlags"],[91,"impl-Octal-for-MappingFlags"],[92,"impl-Debug-for-MappingFlags"],[93,"impl-UpperHex-for-MappingFlags"],[94,"impl-LowerHex-for-MappingFlags"],[96,"impl-Debug-for-GuestVirtAddr"],[97,"impl-UpperHex-for-GuestVirtAddr"],[98,"impl-LowerHex-for-GuestVirtAddr"],[99,"impl-LowerHex-for-GuestPhysAddr"],[100,"impl-Debug-for-GuestPhysAddr"],[101,"impl-UpperHex-for-GuestPhysAddr"],[115,"impl-MappingFlags"],[116,"impl-Flags-for-MappingFlags"],[158,"impl-Sub%3Cusize%3E-for-GuestVirtAddr"],[159,"impl-Sub-for-GuestVirtAddr"],[160,"impl-Sub%3Cusize%3E-for-GuestPhysAddr"],[161,"impl-Sub-for-GuestPhysAddr"],[255,"impl-Debug-for-SysRegAddrRange"],[256,"impl-LowerHex-for-SysRegAddrRange"],[257,"impl-Debug-for-PortRange"],[258,"impl-LowerHex-for-PortRange"],[260,"impl-LowerHex-for-Port"],[261,"impl-UpperHex-for-Port"],[262,"impl-Debug-for-Port"],[263,"impl-Debug-for-SysRegAddr"],[264,"impl-LowerHex-for-SysRegAddr"],[265,"impl-UpperHex-for-SysRegAddr"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAKQAGAAWAAMAJgAAACoADQA5AA0ASwABAE8AAQBVAAIAWwAOAG4AAQB1AAAAhgAAAIsAAACUAAEAlwAAAJ8AAwCkAAEApwADAK8AFADGAAAA2gAbAPcAAQD7AA8AGgECACABFAA=","P":[[26,"H"],[27,""],[28,"H"],[30,""],[32,"H"],[33,""],[41,"T"],[55,"H"],[56,""],[57,"H"],[58,""],[60,"T"],[64,""],[72,"H"],[73,""],[78,"H"],[80,""],[81,"H"],[82,""],[87,"T"],[88,""],[89,"H"],[90,""],[95,"H"],[96,""],[102,"H"],[103,""],[105,"T"],[109,""],[111,"T"],[114,""],[118,"T"],[119,""],[122,"H"],[123,""],[126,"U"],[133,""],[138,"H"],[144,""],[145,"H"],[147,""],[150,"H"],[151,""],[153,"H"],[154,""],[156,"H"],[157,""],[166,"T"],[170,""],[171,"H"],[174,"U,T"],[181,"U"],[188,""],[195,"H"],[196,""],[197,"H"],[199,""],[217,"T"],[227,""],[232,"T"],[237,""],[245,"DeviceAddrRange::Addr"],[248,""],[266,"T"],[271,"U"],[276,""],[287,"T"],[292,"U,T"],[294,"TryFrom::Error"],[295,"U,T"],[298,"U"],[303,""]]}]]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
//{"start":39,"fragment_lengths":[11119]}